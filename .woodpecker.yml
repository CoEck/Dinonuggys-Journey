pipeline:
  godot-build-linux:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export "Linux/X11" godot-build/Dinonuggy\'s\ Journey\ for\ Linux\ ${CI_COMMIT_TAG}.x86_64
      - ls godot-build
    when:
      event: tag
  godot-build-windows:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export "Windows Desktop" godot-build/Dinonuggy\'s\ Journey\ for\ Windows\ ${CI_COMMIT_TAG}.exe
      - ls godot-build
    when:
      event: tag
  godot-build-mac:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export "Mac OSX" godot-build/Dinonuggy\'s\ Journey\ for\ Mac\ OSX\ ${CI_COMMIT_TAG}.zip
      - ls godot-build
    when:
      event: tag
  godot-build-web:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}
      - godot -v --export "HTML5" godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}/index.html
      - zip godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}.zip godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}/*
      - rm -rf godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}
      - ls godot-build
    when:
      event: tag
  # Android Debug Job. It will use the generated debug.keystore.
  #debug-android:
  #  image: barichello/godot-ci
  #  commands:
  #    - mkdir -v -p godot-build/android
  #    - godot -v --export-debug "Android Debug" godot-build/Dinonuggy\'s\ Journey\ for\ Android\ ${CI_COMMIT_TAG}.apk
  # Android Release Job. You will need to include keystore and password in the Codeberg CI secrets:
  # 1. Take your generated keystore and convert it to Base64:
  #   Linux & macOS: `base64 release.keystore -w 0`
  #   Windows: `certutil -encodehex -f release.keystore encoded.txt 0x40000001`
  # 2. Go to Codeberg CI > Repository > Settings > Secrets and copy the Base64-encoded keystore value in a new secret named `SECRET_RELEASE_KEYSTORE_BASE64`.
  # 3. Create a second secret named `SECRET_RELEASE_KEYSTORE_USER` with the alias of your keystore as value.
  # 4. Create a third secret named `SECRET_RELEASE_KEYSTORE_PASSWORD` with the password of your keystore as value.
  #  when:
  #    event: tag
  godot-build-android:
    image: barichello/godot-ci
    commands:
      - echo $${SECRET_RELEASE_KEYSTORE_BASE64} | base64 --decode > /root/release.keystore
      - sed 's@keystore/release=".*"@keystore/release="'/root/release.keystore'"@g' -i export_presets.cfg
      - sed 's@keystore/release_user=".*"@keystore/release_user="'$${SECRET_RELEASE_KEYSTORE_USER}'"@g' -i export_presets.cfg
      - sed 's@keystore/release_password=".*"@keystore/release_password="'$${SECRET_RELEASE_KEYSTORE_PASSWORD}'"@g' -i export_presets.cfg
      - godot -v --export "Android" godot-build/Dinonuggy\'s\ Journey\ for\Android\ ${CI_COMMIT_TAG}.apk
      - ls godot-build
    when:
      event: tag
  godot-build-linux-pack:
    image: barichello/godot-ci
    commands:
      - mkdir -v -p godot-build
      - godot -v --export-pack "Linux/X11" godot-build/godot-runner.pck
      - ls godot-build
    when:
      event: tag
  changelog:
    image: quay.io/git-chglog/git-chglog:latest
    secrets: [ ACCESS_TOKEN ]
    commands:
      # clone repository
      - git clone https://"$${ACCESS_TOKEN}"@codeberg.org/${CI_REPO_OWNER}/${CI_REPO_NAME}.git /${CI_REPO_NAME}
      - cd /${CI_REPO_NAME}
      # generate changelog
      - git-chglog > CHANGELOG.md
      # configure git
      - git config --global user.email "mail@ci.codeberg.org"
      - git config --global user.name "Codeberg CI"
      # deploy changelog
      - git add CHANGELOG.md
      - >
        git commit -m 'docs(changelog): update' ; git push
    when:
      event: tag
  gitea-release:
    image: plugins/gitea-release
    secrets: [ gitea_token token ]
    settings:
      api_key:
        from_secret: gitea_token
      base_url: https://codeberg.org
      files:
        - godot-build/*
      checksum:
        - sha256
        - sha512
      title: ${CI_COMMIT_TAG}
      note: ${CI_REPO_LINK}/src/branch/main/CHANGELOG.md#${CI_COMMIT_TAG/\./-}
    when:
      event: tag
      path:
        exclude: [ '*.md', '.chglog/**' ]
  deploy-web:
    image: alpine
    secrets: [ ACCESS_TOKEN ]
    commands:
      - apk add git unzip rsync
      # clone pages repository
      - git clone https://"$${ACCESS_TOKEN}"@codeberg.org/${CI_REPO_OWNER}/pages.git /pages
      # unzip web version
      - unzip godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}.zip -d godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}/
      - rsync -r --delete --exclude-from=".rsyncignore" godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}/godot-build/Dinonuggy\'s\ Journey\ for\ Web\ ${CI_COMMIT_TAG}/ /pages
      # configure git
      - git config --global user.email "mail@ci.codeberg.org"
      - git config --global user.name "Codeberg CI"
      # deploy web version
      - cd /pages
      - git add -A
      - >
        git commit -m 'chore: update website from upstream to ${CI_COMMIT_TAG}' ; git push
    when:
      event: tag